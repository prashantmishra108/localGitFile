create 
interface - advanceMediaPlayer , mediaPlayer. 
concrete - media,
advanceMediaPlayer - vlc,mp4
mediaPlayer - a play method.
advanceMediaPlayer - playVlc , playMp4

public interface MediaPlayer {										public interface AdvancedMediaPlayer {	
   public void play(String audioType, String fileName);                public void playVlc(String fileName);
}                                                                      public void playMp4(String fileName);
                                                                    }

public class MediaAdapter implements MediaPlayer {					public class VlcPlayer implements AdvancedMediaPlayer{
                                                                       @Override
   AdvancedMediaPlayer advancedMusicPlayer;                            public void playVlc(String fileName) {
                                                                          System.out.println("Playing vlc file. Name: "+ fileName);	
   public MediaAdapter(String audioType){                              }
                                                                    
      if(audioType.equalsIgnoreCase("vlc") ){                          @Override
         advancedMusicPlayer = new VlcPlayer();			               public void playMp4(String fileName) {
                                                                          //do nothing
      }else if (audioType.equalsIgnoreCase("mp4")){                    }
         advancedMusicPlayer = new Mp4Player();                     }
      }	                                                            
   }                                                                public class Mp4Player implements AdvancedMediaPlayer{
                                                                    
   @Override                                                           @Override
   public void play(String audioType, String fileName) {               public void playVlc(String fileName) {
                                                                          //do nothing
      if(audioType.equalsIgnoreCase("vlc")){                           }
         advancedMusicPlayer.playVlc(fileName);                     
      }                                                                @Override
      else if(audioType.equalsIgnoreCase("mp4")){                      public void playMp4(String fileName) {
         advancedMusicPlayer.playMp4(fileName);                           System.out.println("Playing mp4 file. Name: "+ fileName);	
      }                                                                }
   }                                                                }
}


public class AudioPlayer implements MediaPlayer {						public class AdapterPatternDemo {				
   MediaAdapter mediaAdapter;                                              public static void main(String[] args) {
                                                                              AudioPlayer audioPlayer = new AudioPlayer();
   @Override                                                            
   public void play(String audioType, String fileName) {		              audioPlayer.play("mp3", "beyond the horizon.mp3");
                                                                              audioPlayer.play("mp4", "alone.mp4");
      //inbuilt support to play mp3 music files                               audioPlayer.play("vlc", "far far away.vlc");
      if(audioType.equalsIgnoreCase("mp3")){                                  audioPlayer.play("avi", "mind me.avi");
         System.out.println("Playing mp3 file. Name: " + fileName);		   }	
      }                                                                 }	
      
      //mediaAdapter is providing support to play other file formats
      else if(audioType.equalsIgnoreCase("vlc") || 
			 audioType.equalsIgnoreCase("mp4")){
         mediaAdapter = new MediaAdapter(audioType);
         mediaAdapter.play(audioType, fileName);
      }
      
      else{
         System.out.println("Invalid media. " + audioType + " format 
		 not supported");
      }
   }   
}
































	




	

